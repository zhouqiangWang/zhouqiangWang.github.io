[{"title":"model","slug":null,"date":"2017-09-09T11:50:09.000Z","updated":null,"comments":null,"path":"2017/09/09/model/","link":null,"permalink":null,"excerpt":null,"keywords":null,"text":"video 4. Model training and prediction4-step modeling pattern Import the class you plan to use; Instantiate the estimator; Instantiate : make a instance of Estimator : model Fit the model with data(aka “model training”); Predict the response for a new observation Using a different value for KUsing a different classification model video 5. Comparing machine learning modelsEvaluation procedure #1: Train and test on the entire datasetEvaluation procedure #2: Train/test split Split the dataset into two pieces: a training set and a testing set. Train the model on the training set. Test the model on the testing set, and evaluate how well we did.20%~40% of dataset are split as test data. Video #6: Data science pipeline with pandas, seaborn, scikit-learnTypes of supervised learning Classification: Predict a categorical response Regression: Predict a continuous response Reading data using pandas1import pandas as pd 12345# read CSV file directly from a URL and save the resultsdata = pd.read_csv(&apos;./train.csv&apos;, index_col=0)# display the first 5 rowsdata.head() 12# display the last 5 rowsdata.tail() 1data.shape Visualizing data using seabornSeaborn: Python library for statistical data visualization built on top of Matplotlib 1234import seaborn as sb# allow plots to appear within the notebook%matplotlib inline 12# visualize the relationship between the features and the response using scatterplotssns.pairplot(data, x_vars=[&apos;TV&apos;,&apos;Radio&apos;,&apos;Newspaper&apos;], y_vars=&apos;Sales&apos;, size=7, aspect=0.7, kind=&apos;reg&apos;) Linear regressionPros: fast, no tuning required, highly interpretable, well-understood Cons: unlikely to produce the best predictive accuracy (presumes a linear relationship between the features and response) Preparing X and y using pandas Splitting X and y into training and testing sets Linear regression in scikit-learn Interpreting model coefficients Making predictions Model evaluation metrics for regression Mean Absolute Error (MAE) is the mean of the absolute value of the errors: Mean Squared Error (MSE) is the mean of the squared errors: Root Mean Squared Error (RMSE) is the square root of the mean of the squared errors: Comparing these metrics: MAE is the easiest to understand, because it’s the average error. MSE is more popular than MAE, because MSE “punishes” larger errors. RMSE is even more popular than MSE, because RMSE is interpretable in the “y” units. Feature selectionremove some feature from the model and check the RMSE!","raw":null,"content":null,"categories":null,"tags":[]},{"title":"Machine Learning scikit","slug":null,"date":"2017-09-03T09:38:26.000Z","updated":null,"comments":null,"path":"2017/09/03/Machine-Learning-scikit/","link":null,"permalink":null,"excerpt":null,"keywords":null,"text":"video 1. Intro to Machine Learning. What is machine learningsemi-automated extraction of knowledge from data. two main categories of machine learning? supervised - predictive modeling, making predictions using data; unsupervised learning - extract structure from data or learning how to best represent data. two main steps of supervised learning: train a machine learning model using existing labeled data. make prediction on new coming data. video 2. set-up python environment for machine learning video 3. Exploring the Iris datasetMachine learning terminology observation : Each row in dataset(also known as: sample, example, instance, record); feature : Each column in dataset(aka. predictor, attribute, independent variable, input, regressor, covariate); response : Each value we are predicting(aka: target, outcome, label, dependent variable); Classification : supervised learning in which the response is categorical; Regression : supervised learning in which the response is ordered and continuous. Requirements for working with data in scikit-learn Features and response are separate objects; Features and response should be numeric; Features and response should be NumPy arrays; Features and response should have specific shapes.","raw":null,"content":null,"categories":null,"tags":[]},{"title":"Hello World","slug":null,"date":"2016-05-23T20:12:38.000Z","updated":null,"comments":null,"path":"2016/05/24/hello-world/","link":null,"permalink":null,"excerpt":null,"keywords":null,"text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","raw":null,"content":null,"categories":null,"tags":[]}]